apiVersion: v1
kind: Namespace
metadata:
  name: argo-workflows
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflows
  namespace: argocd
spec:
  project: default
  source:
    chart: argo-workflows
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 0.45.12
    helm:
      releaseName: argo-workflows
      valuesObject:
        controller:
          extraEnv:
            - name: ALWAYS_OFFLOAD_NODE_STATUS
              value: "true"
          persistence:
            nodeStatusOffLoad: true
            archive: true
            postgresql:
              sslMode: disable
              host: 172.16.100.124
              port: 5432
              database: postgres
              tableName: argo_workflows
              userNameSecret:
                name: argo-postgres-config
                key: username
              passwordSecret:
                name: argo-postgres-config
                key: password

        artifactRepository:
          archiveLogs: true
          s3:
            endpoint: console-minio.hnatekmar.xyz
            accessKeySecret:
              name: argo-workflows-minio
              key: accesskey
            secretKeySecret:
              name: argo-workflows-minio
              key: secretkey
            bucket: workflows
        workflow:
          serviceAccount:
            create: true
        server:
          authMode: sso
          ingress:
            enabled: true
            ingressClassName: kong
            hosts:
              - argoworkflows.hnatekmar.xyz
          sso:
            enabled: true
            rbac:
              enabled: false
            issuer: https://authentik.hnatekmar.xyz/application/o/argoworkflows/
            clientId:
              name: argo-server-sso
              key: clientid
            clientSecret:
              name: argo-server-sso
              key: clientsecret
            scopes:
              - email
              - openid
              - profile

  destination:
    server: "https://kubernetes.default.svc"
    namespace: argo-workflows
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:
      - CreateNamespace=true
